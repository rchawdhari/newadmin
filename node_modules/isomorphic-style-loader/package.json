{
  "_args": [
    [
      {
        "raw": "isomorphic-style-loader",
        "scope": null,
        "escapedName": "isomorphic-style-loader",
        "name": "isomorphic-style-loader",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/opt/newadmin"
    ]
  ],
  "_from": "isomorphic-style-loader@latest",
  "_id": "isomorphic-style-loader@2.0.0",
  "_inCache": true,
  "_location": "/isomorphic-style-loader",
  "_nodeVersion": "7.9.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/isomorphic-style-loader-2.0.0.tgz_1492724300170_0.9033040010835975"
  },
  "_npmUser": {
    "name": "frenzzy",
    "email": "frenzzy.man@gmail.com"
  },
  "_npmVersion": "4.2.0",
  "_phantomChildren": {
    "big.js": "3.1.3",
    "emojis-list": "2.1.0",
    "json5": "0.5.1"
  },
  "_requested": {
    "raw": "isomorphic-style-loader",
    "scope": null,
    "escapedName": "isomorphic-style-loader",
    "name": "isomorphic-style-loader",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/isomorphic-style-loader/-/isomorphic-style-loader-2.0.0.tgz",
  "_shasum": "d4d41a5f88a045dcdb3c5b61a464912bc6c0d3dc",
  "_shrinkwrap": null,
  "_spec": "isomorphic-style-loader",
  "_where": "/opt/newadmin",
  "author": {
    "name": "Kriasoft",
    "email": "support@kriasoft.com",
    "url": "http://www.kriasoft.com"
  },
  "babel": {
    "presets": [
      "react",
      "latest"
    ],
    "plugins": [
      "transform-runtime"
    ]
  },
  "bugs": {
    "url": "https://github.com/kriasoft/isomorphic-style-loader/issues"
  },
  "contributors": [
    {
      "name": "Konstantin Tarkus",
      "email": "hello@tarkus.me"
    },
    {
      "name": "Vladimir Kutepov",
      "email": "frenzzy.man@gmail.com"
    }
  ],
  "dependencies": {
    "babel-runtime": "^6.23.0",
    "hoist-non-react-statics": "^1.2.0",
    "loader-utils": "^1.1.0",
    "prop-types": "^15.5.8"
  },
  "description": "Isomorphic CSS style loader for Webpack",
  "devDependencies": {
    "babel-cli": "^6.24.1",
    "babel-core": "^6.24.1",
    "babel-eslint": "^7.2.2",
    "babel-plugin-transform-runtime": "^6.23.0",
    "babel-preset-latest": "^6.24.1",
    "babel-preset-react": "^6.24.1",
    "babel-register": "^6.24.1",
    "chai": "^3.5.0",
    "coveralls": "^2.13.0",
    "create-react-class": "^15.5.2",
    "eslint": "^3.19.0",
    "eslint-config-airbnb": "^14.1.0",
    "eslint-plugin-import": "^2.2.0",
    "eslint-plugin-jsx-a11y": "^4.0.0",
    "eslint-plugin-react": "^6.10.3",
    "istanbul": "^1.1.0-alpha.1",
    "jsdom": "^9.12.0",
    "mocha": "^3.2.0",
    "react": "^15.5.4",
    "react-dom": "^15.5.4",
    "rimraf": "^2.6.1",
    "sinon": "^2.1.0"
  },
  "directories": {},
  "dist": {
    "shasum": "d4d41a5f88a045dcdb3c5b61a464912bc6c0d3dc",
    "tarball": "https://registry.npmjs.org/isomorphic-style-loader/-/isomorphic-style-loader-2.0.0.tgz"
  },
  "eslintConfig": {
    "parser": "babel-eslint",
    "extends": "airbnb",
    "env": {
      "browser": true
    },
    "rules": {
      "import/no-extraneous-dependencies": "off",
      "no-continue": "off",
      "no-plusplus": "off",
      "react/jsx-filename-extension": "off"
    }
  },
  "files": [
    "lib"
  ],
  "gitHead": "8fe56ef8fba794e00bfbc9b6d731edf0f572d4e7",
  "homepage": "https://github.com/kriasoft/isomorphic-style-loader#readme",
  "keywords": [
    "webpack",
    "webpack-loader",
    "webpack loader",
    "loader",
    "css",
    "scss",
    "style",
    "styles",
    "style-loader",
    "style loader",
    "react",
    "reactjs",
    "isomorphic",
    "universal"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "frenzzy",
      "email": "frenzzy.man@gmail.com"
    },
    {
      "name": "koistya",
      "email": "hello@tarkus.me"
    }
  ],
  "name": "isomorphic-style-loader",
  "optionalDependencies": {},
  "readme": "<img width=\"150\" height=\"150\" align=\"right\" src=\"https://raw.githubusercontent.com/kriasoft/isomorphic-style-loader/master/logo.png\" />\n\n# Isomorphic CSS style loader for [Webpack](http://webpack.github.io)\n\n[![NPM version](http://img.shields.io/npm/v/isomorphic-style-loader.svg?style=flat-square)](https://www.npmjs.com/package/isomorphic-style-loader)\n[![NPM downloads](http://img.shields.io/npm/dm/isomorphic-style-loader.svg?style=flat-square)](https://www.npmjs.com/package/isomorphic-style-loader)\n[![Build Status](http://img.shields.io/travis/kriasoft/isomorphic-style-loader/master.svg?style=flat-square)](https://travis-ci.org/kriasoft/isomorphic-style-loader)\n[![Coverage Status](https://img.shields.io/coveralls/kriasoft/isomorphic-style-loader.svg?style=flat-square)](https://coveralls.io/github/kriasoft/isomorphic-style-loader)\n[![Dependency Status](http://img.shields.io/david/kriasoft/isomorphic-style-loader.svg?style=flat-square)](https://david-dm.org/kriasoft/isomorphic-style-loader)\n[![Chat](http://img.shields.io/badge/chat_room-%23react--starter--kit-blue.svg?style=flat-square)](https://gitter.im/kriasoft/react-starter-kit)\n\n> An alternative CSS style loader, which works similarly to\n> [style-loader](https://github.com/webpack/style-loader), but is optimized for\n> [isomorphic apps](http://nerds.airbnb.com/isomorphic-javascript-future-web-apps/).\n> In addition to what style-loader provides, it allow to render\n> [critical path CSS](https://developers.google.com/web/fundamentals/performance/critical-rendering-path/)\n> during server-side rendering (SSR), by adding two helper methods on to the\n> `styles` object - `._insertCss()` (injects CSS into the DOM) and `._getCss()`\n> (returns CSS string).\n\nSee [getting started](#getting-started) &nbsp;|&nbsp; [changelog](CHANGELOG.md) &nbsp;|&nbsp;\nJoin [#react-starter-kit](https://gitter.im/kriasoft/react-starter-kit) chat room on Gitter to stay\nup to date\n\n### How to Install\n\n```\n$ npm install isomorphic-style-loader --save-dev\n```\n\n### Getting Started\n\n##### Webpack configuration:\n\n```js\n{\n  module: {\n    loaders: [\n      {\n        test: /\\.scss$/,\n        loaders: [\n          'isomorphic-style-loader',\n          'css-loader?modules&localIdentName=[name]_[local]_[hash:base64:3]',\n          'postcss-loader'\n        ]\n      }\n    ]\n  }\n}\n```\n\n**Note**: Configuration is the same for both client-side and server-side bundles.\n\n##### React component example\n\n```scss\n// MyComponent.scss\n.root { padding: 10px; }\n.title { color: red; }\n```\n\n```js\n// MyComponent.js\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from 'isomorphic-style-loader/lib/withStyles';\nimport s from './MyComponent.scss';\n\nfunction MyComponent(props, context) {\n  return (\n    <div className={s.root}>\n      <h1 className={s.title}>Hello, world!</h1>\n    </div>\n  );\n}\n\nexport default withStyles(s)(MyComponent);        // <--\n```\n\n**P.S.**: It works great with [CSS Modules](https://github.com/css-modules/css-modules)!\nJust decorate your React component with the [withStyles](https://github.com/kriasoft/isomorphic-style-loader/blob/master/src/withStyles.js)\nhigher-order component, and pass a function to your React app via `insertCss`\ncontext variable (see [React's context API](https://facebook.github.io/react/docs/context))\nthat either calls `styles._insertCss()` on a client, or `styles._getCss()`\non the server. See server-side rendering example below:\n\n```js\nimport express from 'express';\nimport ReactDOM from 'react-dom';\nimport router from './router.js'; // <-- isomorphic router, see react-starter-kit for example\n\nconst server = express();\nconst port = process.env.PORT || 3000;\n\n// Server-side rendering of the React app\nserver.get('*', (req, res, next) =>\n  const css = new Set(); // CSS for all rendered React components\n  const context = { insertCss: (...styles) => styles.forEach(style => css.add(style._getCss())); };\n  router.dispatch({ ...req, context }).then((component, state) => {\n    const body = ReactDOM.renderToString(component);\n    const html = `<!doctype html>\n      <html>\n        <head>\n          <script async src=\"/client.js\"></script>\n          <style type=\"text/css\">${[...css].join('')}</style>\n        </head>\n        <body>\n          <div id=\"root\">${body}</div>\n        </body>\n      </html>`;\n    res.status(state.statusCode).send(html);\n  }).catch(next);\n});\n\nserver.listen(port, () => {\n  console.log(`Node.js app is running at http://localhost:${port}/`);\n});\n```\n\nIt should generate an HTML output similar to this one:\n\n```html\n<html>\n  <head>\n    <title>My Application</title>\n    <script async src=\"/client.js\"></script>\n    <style type=\"text/css\">\n      .MyComponent_root_Hi8 { padding: 10px; }\n      .MyComponent_title_e9Q { color: red; }\n    </style>\n  </head>\n  <body>\n    <div id=\"root\">\n      <div class=\"MyComponent_root_Hi8\" data-reactid=\".cttboum80\" data-react-checksum=\"564584530\">\n        <h1 class=\"MyComponent_title_e9Q\" data-reactid=\".cttboum80.0\">Hello, World!</h1>\n      </div>\n    </div>\n  </body>\n</html>\n```\n\nRegardless of how many styles components there are in the `app.js` bundle,\nonly critical CSS is going to be rendered on the server inside the `<head>`\nsection of HTML document. Critical CSS is what actually used on the\nrequested web page, effectively dealing with [FOUC](https://en.wikipedia.org/wiki/Flash_of_unstyled_content)\nissue and improving client-side performance. CSS of the unmounted components\nwill be removed from the DOM.\n\n##### Hot Reload\n\nYou can activate hot module reload for style by setting the `debug` option to true in your webpack\nconfiguration. If you are using webpack 2, you need to supply it though the `LoaderOptionsPlugin`\nbecause the [`debug` option has been removed](https://gist.github.com/sokra/27b24881210b56bbaff7#loader-options--minimize).\n\n### Backers\n\n♥ Isomorphic Style Loader? Help us keep it alive by [donating funds](https://www.patreon.com/tarkus) to cover project expenses!\n\n<a href=\"https://github.com/koistya\" target=\"_blank\">\n  <img src=\"https://github.com/koistya.png?size=64\">\n</a>\n<a href=\"https://www.patreon.com/bePatron?patAmt=25&amp;u=2475816\" target=\"_blank\">\n  <img src=\"https://opencollective.com/static/images/become_backer.svg\">\n</a>\n\n### Related Projects\n\n * [React Starter Kit](https://github.com/kriasoft/react-starter-kit) — Isomorphic web app boilerplate\n\n### Support\n\n * [#react-starter-kit](https://gitter.im/kriasoft/react-starter-kit) on Gitter\n * [@koistya](https://www.codementor.io/koistya) on Codementor\n\n### License\n\nThe MIT License © 2015-present Kriasoft, LLC. All rights reserved.\n\n---\nMade with ♥ by Konstantin Tarkus ([@koistya](https://twitter.com/koistya)) and [contributors](https://github.com/kriasoft/isomorphic-style-loader/graphs/contributors)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/kriasoft/isomorphic-style-loader.git"
  },
  "scripts": {
    "build": "rimraf lib && babel src --out-dir lib",
    "coveralls": "cat ./coverage/lcov.info | coveralls",
    "lint": "eslint src test",
    "prepublish": "rimraf lib && babel src --out-dir lib",
    "test": "mocha test --compilers js:babel-register",
    "test:cover": "babel-node ./node_modules/istanbul/lib/cli.js cover ./node_modules/mocha/bin/_mocha",
    "test:watch": "mocha --compilers js:babel-register --reporter min --watch"
  },
  "version": "2.0.0"
}
