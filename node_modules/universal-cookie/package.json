{
  "_args": [
    [
      {
        "raw": "universal-cookie",
        "scope": null,
        "escapedName": "universal-cookie",
        "name": "universal-cookie",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/opt/newadmin"
    ]
  ],
  "_from": "universal-cookie@latest",
  "_id": "universal-cookie@2.0.8",
  "_inCache": true,
  "_location": "/universal-cookie",
  "_nodeVersion": "6.9.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/universal-cookie-2.0.8.tgz_1496196075617_0.1132822462823242"
  },
  "_npmUser": {
    "name": "exon",
    "email": "trembl.ben@gmail.com"
  },
  "_npmVersion": "3.10.8",
  "_phantomChildren": {},
  "_requested": {
    "raw": "universal-cookie",
    "scope": null,
    "escapedName": "universal-cookie",
    "name": "universal-cookie",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#DEV:/",
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/universal-cookie/-/universal-cookie-2.0.8.tgz",
  "_shasum": "e9ab9a2a665bcd847917caee5b1a4c17598eabb9",
  "_shrinkwrap": null,
  "_spec": "universal-cookie",
  "_where": "/opt/newadmin",
  "author": {
    "name": "Benoit Tremblay",
    "email": "benoit@reactivestack.com"
  },
  "bugs": {
    "url": "https://github.com/reactivestack/cookies/issues"
  },
  "dependencies": {
    "cookie": "^0.3.1",
    "object-assign": "^4.1.0"
  },
  "description": "Universal cookies for JavaScript",
  "devDependencies": {
    "babel-cli": "^6.24.1",
    "rimraf": "^2.6.1"
  },
  "directories": {},
  "dist": {
    "shasum": "e9ab9a2a665bcd847917caee5b1a4c17598eabb9",
    "tarball": "https://registry.npmjs.org/universal-cookie/-/universal-cookie-2.0.8.tgz"
  },
  "files": [
    "lib"
  ],
  "homepage": "https://github.com/reactivestack/cookies/packages/universal-cookie/#readme",
  "keywords": [
    "universal",
    "isomophic",
    "cookie"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "exon",
      "email": "trembl.ben@gmail.com"
    }
  ],
  "name": "universal-cookie",
  "optionalDependencies": {},
  "readme": "<h3 align=\"center\">\n  universal-cookie\n</h3>\n\n<p align=\"center\">\n  Universal cookies for JavaScript<br />\n  <a href=\"https://badge.fury.io/js/universal-cookie\"><img src=\"https://badge.fury.io/js/universal-cookie.svg\" /></a>\n</p>\n\n[![Build Status](https://travis-ci.org/reactivestack/cookies.svg?branch=master)](https://travis-ci.org/reactivestack/cookies)\n<br />\n[![Sauce Test Status](https://saucelabs.com/browser-matrix/coookies.svg)](https://saucelabs.com/u/coookies)\n\n## Integrations\n - [`react-cookie`](https://www.npmjs.com/package/react-cookie) - Universal cookies for React\n - [`universal-cookie-express`](https://www.npmjs.com/package/universal-cookie-express) - Hook cookies get/set on Express for server-rendering\n\n## Getting started\n\n`npm install universal-cookie`\n\n## API - Cookies class\n\n### `constructor([cookieHeader])`\nCreate a cookies context\n - cookieHeader (string|object): specify the cookie header on the server only\n\n### `get(name, [options])`\nGet a cookie value\n - name (string): cookie name\n - options (object):\n   - doNotParse (boolean): do not convert the cookie into an object no matter what\n\n### `getAll([options])`\nGet all cookies\n - options (object):\n   - doNotParse (boolean): do not convert the cookie into an object no matter what\n\n### `set(name, value, [options])`\nSet a cookie value\n- name (string): cookie name\n- value (string|object): save the value and stringify the object if needed\n- options (object): Support all the cookie options from RFC 6265\n  - path (string): cookie path, use `/` as the path if you want your cookie to be accessible on all pages\n  - expires (Date): absolute expiration date for the cookie\n  - maxAge (number): relative max age of the cookie from when the client receives it in second\n  - domain (string): domain for the cookie (sub.domain.com or .allsubdomains.com)\n  - secure (boolean): Is only accessible through HTTPS?\n  - httpOnly (boolean): Is only the server can access the cookie?\n\n### `remove(name, [options])`\nRemove a cookie\n- name (string): cookie name\n- options (object): Support all the cookie options from RFC 6265\n  - path (string): cookie path, use `/` as the path if you want your cookie to be accessible on all pages\n  - expires (Date): absolute expiration date for the cookie\n  - maxAge (number): relative max age of the cookie from when the client receives it in second\n  - domain (string): domain for the cookie (sub.domain.com or .allsubdomains.com)\n  - secure (boolean): Is only accessible through HTTPS?\n  - httpOnly (boolean): Is only the server can access the cookie?\n\n## Browser Example\n\n```js\nimport Cookies from 'universal-cookie';\n\nconst cookies = new Cookies();\n\ncookies.set('myCat', 'Pacman', { path: '/' });\nconsole.log(cookies.get('myCat')); // Pacman\n```\n\n## Server Example\n\n```js\nimport Cookies from 'universal-cookie';\n\nconst cookies = new Cookies(req.headers.cookie);\n\nconsole.log(cookies.get('myCat')); // Pacman or undefined if not set yet\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/reactivestack/cookies.git"
  },
  "scripts": {
    "build": "rimraf lib && babel src -d lib --ignore __tests__"
  },
  "version": "2.0.8"
}
